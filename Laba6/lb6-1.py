
# Математические операции над элементами массива Объединение массивов
import numpy as np
 
#Если A и B массивы одинакового размера, то их можно складывать, умножать, вычитать, 
# делить и возводить в степень. Эти операции выполняются поэлементно, результирующий массив 
# будет совпадать по геометрии с исходными массивами, а каждый его элемент будет результатом 
# выполнения соответствующей операции над парой элементов из исходных массивов:

A = np.array([[-1., 2., 3.], [4., 5., 6.], [7., 8., 9.]])
B = np.array([[1., -2., -3.], [7., 8., 9.], [4., 5., 6.], ])

C = A + B
D = A - B
E = A * B
F = A / B
G = A ** B

print('+\n', C, '\n')
print('-\n', D, '\n')
print('*\n', E, '\n')
print('/\n', F, '\n')
print('**\n', G, '\n')

#Можно выполнить любую операцию из приведенных выше над массивом и числом. В этом случае
#  операция также выполнится над каждым из элементов массива:

A = np.array([[-1., 2., 3.], [4., 5., 6.], [7., 8., 9.]])
B = -2.

C = A + B
D = A - B
E = A * B
F = A / B
G = A ** B

print('+\n', C, '\n')
print('-\n', D, '\n')
print('*\n', E, '\n')
print('/\n', F, '\n')
print('**\n', G, '\n')

#Для более сложных функций (например, для тригонометрических, экспоненты, логарифма,
# преобразования между градусами и радианами, модуля, корня квадратного и.д.) в NumPy 
# есть реализация. Рассмотрим на примере экспоненты и логарифма:

A = np.array([[1., 2., 3.], [4., 5., 6.], [7., 8., 9.]])
B = np.exp(A)
C = np.log(B)

print('A', A, '\n')
print('B', B, '\n')
print('C', C, '\n')



A = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])
print(np.repeat(A, 2))

A = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])
B = np.repeat(A, 2).reshape(A.shape[0], A.shape[1], -1)
print(B)